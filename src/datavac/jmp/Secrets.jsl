Names Default To Here(1); dv=::dv;

dv:HaveUserDownloadAccessKey=Function({},{Default Local},
	dak=New Window("Download DataVacuum Access Key",
		<<Modal,
		VListBox( t=Text Box(
			"When you hit OK, a browser window will open for you to download an access key.  " ||
			"Let this key download to your default Downloads folder, then close that browser window."
		),
			H List Box(
				Spacer Box(),
				Button Box( "OK" ),
				Button Box( "Cancel" )
			)
		)
	);
	If(dak["Button"]==1,
		dv:PySub("from datavac.appserve.user_side import direct_user_to_access_key as dutak; dutak();");
		New Window("Download Access Key",
			<<Modal,
			VListBox( t=Text Box(
				"Hit OK when you've downloaded the access key to your default Downloads folder."
			))
		);
		dv:PySub("from datavac.appserve.user_side import copy_in_access_key as ciak; ciak();");
	);
);

dv:GetSavedAccessKey=Function({},{Default Local},
	dv:PySub("from datavac.appserve.user_side import get_saved_access_key as gsak; ak=gsak(suppress_error=True);");
	key=dv:PyConn()<<Get("ak");
	key
);

dv:EnsureAccessKey=Function({},{Default Local},
	key=dv:GetSavedAccessKey();
	If(Is Empty(key),
		Write( "Need user to download key\!N");
		dv:HaveUserDownloadAccessKey();
		key=dv:GetSavedAccessKey();
		If(Is Empty(key),Throw("Failed to get access key\!N"),Write("Got key\!N"));
		Write("Refreshing Python now that we have an access key\!N");
		dv:PyRefresh();
	, // Else
		Write( "Already have key\!N");
		key
	);
);

//dv:FetchDBConnectionInfo=Function({},{Default Local},
//);

If(! Contains(dv:DATAVACUUM_DEPLOYMENT_URI, "localhost"),
    dv:EnsureAccessKey();)